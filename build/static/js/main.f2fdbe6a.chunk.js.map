{"version":3,"sources":["constants.js","components/Nav.js","components/RankingsRow.js","components/RankingsTable.js","components/NativeSelects.js","components/AthleteRow.js","components/AthleteTable.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["exports","events","Men","Women","field_events","track_events","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","marginLeft","display","appBar","background","title","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","Nav","props","classes","className","AppBar","Toolbar","Typography","variant","noWrap","InputBase","placeholder","input","onKeyDown","e","handleTextField","inputProps","ReportRow","buildRow","name","result","meet","date","type","this","data","map","i","TableCell","key","style","wordBreak","fontWeight","React","Component","PerformanceTable","styled","Table","maxWidth","margin","border","TableHeaderRow","TableRow","TableRowHighlighted","cursor","get_event_type","event","toLowerCase","constants","includes","RankingsTable","state","isLoading","dataArray","url","fetch","json","setState","onTableLoad","RenderedTable","split","pop","row","onClick","onAthleteSelect","TableHead","TableBody","visible","textAlign","marginTop","formControl","minWidth","selectEmpty","nativeSelect","borderColor","inputLabel","inputFocused","NativeSelects","FormControl","InputLabel","focused","shrink","NativeSelect","value","onChange","onDisplayChange","gender","season","top","AthleteTable","ReturnButton","Button","Home","tableLoading","target","athlete","renderAthlete","athleteName","handleReturn","keyCode","athleteURL","textTransform","eventName","simplifiedName","replace","toUpperCase","marginBottom","createMuiTheme","secondary","main","App","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f2fdbe6a.chunk.js","sourcesContent":["const EVENTS = {\n    Men: ['mens100m',\n        'mens200m', 'mens400m', 'mens800m', 'mens1500m', 'mens3000m', 'mens5000m', 'mens10000m',\n        'mens110mh', 'mens400mh', 'mens3000msc', 'mens2000msc', 'mens5000mrw', 'menshighjump', 'menspolevault',\n        'menslongjump', 'menstriplejump', 'mensdiscusthrow', 'menshammerthrow', 'mensshotput', 'mensjavelinthrow', 'decathlon'],\n    Women:\n        ['womens100m', 'womens200m', 'womens400m', 'womens800m', 'womens1500m', 'womens3000m', 'womens5000m', 'womens10000m',\n            'womens100mh', 'womens400mh', 'womens3000msc', 'womens2000msc', 'womens5000mrw', 'womenshighjump', 'womenspolevault',\n            'womenslongjump', 'womenstriplejump', 'womensdiscusthrow', 'womenshammerthrow', 'womensshotput', 'womensjavelinthrow',\n            'heptathlon']\n};\n\nconst FIELD_EVENTS = ['decathlon', 'heptathlon',\n    'menshighjump', 'menspolevault', 'menslongjump', 'menstriplejump',\n    'mensdiscusthrow', 'menshammerthrow', 'mensshotput', 'mensjavelinthrow', 'womenshighjump', 'womenspolevault',\n    'womenslongjump', 'womenstriplejump', 'womensdiscusthrow', 'womenshammerthrow', 'womensshotput',\n    'womensjavelinthrow',];\n\nconst TRACK_EVENTS = ['mens100m', 'mens200m', 'mens400m', 'mens800m', 'mens1500m', 'mens3000m', 'mens5000m', 'mens10000m',\n    'mens110mh', 'mens400mh', 'mens3000msc', 'mens2000msc', 'mens5000mrw', 'womens100m', 'womens200m', 'womens400m',\n    'womens800m', 'womens1500m', 'womens3000m', 'womens5000m', 'womens10000m', 'womens100mh', 'womens400mh',\n    'womens3000msc', 'womens2000msc', 'womens5000mrw'];\n\nexports.events= EVENTS;\nexports.field_events = FIELD_EVENTS;\nexports.track_events = TRACK_EVENTS;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport {fade, makeStyles} from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        display: 'block',\n    },\n    appBar: {\n        background: '#6262CB',\n    },\n    title: {\n        flexGrow: 1,\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        width: theme.spacing(7),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 7),\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: 120,\n            '&:focus': {\n                width: 200,\n            },\n        },\n    },\n}));\n\nexport default function Nav(props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar className={classes.appBar} position=\"static\">\n                <Toolbar>\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\n                        HONG KONG TRACK AND FIELD PERFORMANCES\n                    </Typography>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon/>\n                        </div>\n                        <InputBase\n                            placeholder=\"Search Athlete...\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            onKeyDown={e => props.handleTextField(e)}\n                            inputProps={{'aria-label': 'search'}}\n                        />\n                    </div>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}","import React from 'react';\nimport {TableCell} from \"@material-ui/core\";\n\nexport default class ReportRow extends React.Component {\n\n    buildRow = ({name, result, meet, date}) => {\n        let unit = (this.props.type === 'field') ? ' (m)' : ' (s)';\n        return [name, result + unit, meet, date];\n    };\n\n    render() {\n        let rowInfo = this.buildRow(this.props.data);\n        return (\n            rowInfo.map((data, i) => {\n                if(i === 1) {\n                    return (\n                        < TableCell key={i} style={{wordBreak: 'break-all', fontWeight: 'bold'}}>\n                            {data}\n                        </TableCell>\n                    );\n                }\n                else {\n                    return (\n                        < TableCell key={i} style={{wordBreak: 'break-all'}}>\n                            {data}\n                        </TableCell>\n                    );\n                }\n            }));\n    }\n}\n","import {Table, TableBody, TableCell, TableHead, TableRow} from \"@material-ui/core\";\nimport {styled} from '@material-ui/core/styles';\nimport React from \"react\";\nimport RankingsRow from './RankingsRow';\nimport constants from '../constants';\nimport Loader from \"react-loader-spinner\";\n\nconst PerformanceTable = styled(Table)({\n    maxWidth: '50%',\n    margin: 'auto',\n    borderRadius: '6px',\n    border: '1px inset #9395A8',\n});\n\nconst TableHeaderRow = styled(TableRow)({\n    backgroundColor: '#9395A8',\n});\n\nconst TableRowHighlighted = styled(TableRow)({\n    \"&:hover\": {\n        backgroundColor: \"#6262CB !important\"\n    },\n    cursor: 'pointer',\n});\n\nconst get_event_type = event => {\n    event = event.toLowerCase();\n    if (constants.field_events.includes(event))\n        return 'field';\n    if (constants.track_events.includes(event))\n        return 'track';\n};\n\nexport default class RankingsTable extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            dataArray: null,\n            url: this.props.url\n        };\n    };\n\n    async componentDidMount() {\n        let result = await fetch(this.state.url);\n        const data = await result.json();\n        if (data)\n            this.setState({dataArray: data, isLoading: false}, () => this.props.onTableLoad());\n        else\n            this.setState({...this.state, isLoading: true});\n    };\n\n\n    render() {\n        let RenderedTable;\n        let event = this.state.url.split('event=').pop();\n        if (!this.state.isLoading)\n            RenderedTable = this.state.dataArray.map((row, i) => {\n                return <TableRowHighlighted onClick={() => this.props.onAthleteSelect(row.name)} key={i}><RankingsRow\n                    type={get_event_type(event)} key={i}\n                    data={row}/></TableRowHighlighted>;\n            });\n\n        return (\n            <div>\n                <PerformanceTable>\n                    <TableHead>\n                        <TableHeaderRow>\n                            <TableCell style={{fontWeight: 'bold'}}>NAME</TableCell>\n                            <TableCell style={{fontWeight: 'bold'}}>RESULT</TableCell>\n                            <TableCell style={{fontWeight: 'bold'}}>MEET</TableCell>\n                            <TableCell style={{fontWeight: 'bold'}}>DATE</TableCell>\n                        </TableHeaderRow>\n                    </TableHead>\n                    <TableBody>{RenderedTable}</TableBody>\n                </PerformanceTable>\n                <Loader style={{margin: 'auto'}} type=\"ThreeDots\" color=\"#6262CB\" height={80} width={80}\n                        visible={this.state.isLoading}/>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        textAlign: 'center',\n        marginTop: '1%',\n    },\n    formControl: {\n        margin: 'auto',\n        minWidth: '12%',\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    nativeSelect: {\n        '&:hover:not(.Mui-disabled):before': {\n            borderColor: '#6262CB',\n        },\n        \"&:after\": {\n            // changes the bottom textbox border when clicked/focused.  thought it would be the same with input label\n            borderColor: '#6262CB',\n        }\n    },\n    inputLabel: {\n        \"&$inputFocused\": {\n            color: \"#6262CB\"\n        }\n    },\n    inputFocused: {},\n}));\n\nexport default function NativeSelects(props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <FormControl className={classes.formControl}>\n                <InputLabel className={classes.inputLabel}\n                            classes={{focused: classes.inputFocused}} shrink>\n                    Event\n                </InputLabel>\n                <NativeSelect\n                    className={classes.nativeSelect}\n                    value={props.event}\n                    onChange={props.onDisplayChange('event')}\n                    inputProps={{\n                        name: 'event'\n                    }}\n                >\n                    <option value='All'>All Events</option>\n                    <option value='100m'>100 Meters</option>\n                    <option value='200m'>200 Meters</option>\n                    <option value='400m'>400 Meters</option>\n                    <option value='800m'>800 Meters</option>\n                    <option value='1500m'>1500 Meters</option>\n                    <option value='3000m'>3000 Meters</option>\n                    <option value='5000m'>5000 Meters</option>\n                    <option value='10000m'>10000 Meters</option>\n                    {(props.gender === 'Women') ? <option value='100mh'>100 Hurdles</option> :\n                        <option value='110mh'>110 Hurdles</option>}\n                    <option value='400mh'>400 Hurdles</option>\n                    <option value='3000msc'>3000 SteepleChase</option>\n                    <option value='5000mrw'>5000 Race Walk</option>\n                    <option value='Pole Vault'>Pole Vault</option>\n                    <option value='High Jump'>High Jump</option>\n                    <option value='Long Jump'>Long Jump</option>\n                    <option value='Triple Jump'>Triple Jump</option>\n                    <option value='Discus Throw'>Discus</option>\n                    <option value='Shot Put'>Shot Put</option>\n                    <option value='Javelin Throw'>Javelin Throw</option>\n                    <option value='Hammer Throw'>Hammer Throw</option>\n                    {(props.gender === 'Women') ? <option value='Heptathlon'>Heptathlon</option> :\n                        <option value='Decathlon'>Decathlon</option>}\n                </NativeSelect>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n                <InputLabel className={classes.inputLabel}\n                            classes={{focused: classes.inputFocused}} shrink>\n                    Gender\n                </InputLabel>\n                <NativeSelect\n                    className={classes.nativeSelect}\n                    value={props.gender}\n                    onChange={props.onDisplayChange('gender')}\n                    inputProps={{\n                        name: 'gender'\n                    }}\n                >\n                    <option value='Men'>Men</option>\n                    <option value='Women'>Women</option>\n                </NativeSelect>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n                <InputLabel className={classes.inputLabel}\n                            classes={{focused: classes.inputFocused}} shrink>\n                    Season\n                </InputLabel>\n                <NativeSelect\n                    className={classes.nativeSelect}\n                    value={props.season}\n                    onChange={props.onDisplayChange('season')}\n                    inputProps={{\n                        name: 'season'\n                    }}\n                >\n                    <option value={2019}>2018 - 2019</option>\n                    <option value={2020}>2019 - 2020</option>\n                </NativeSelect>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n                <InputLabel className={classes.inputLabel}\n                            classes={{focused: classes.inputFocused}} shrink>\n                    Displaying Top\n                </InputLabel>\n                <NativeSelect\n                    className={classes.nativeSelect}\n                    value={props.top}\n                    onChange={props.onDisplayChange('top')}\n                    inputProps={{\n                        name: 'top'\n                    }}\n                >\n                    <option value='*'>All</option>\n                    <option value={25}>25</option>\n                    <option value={10}>10</option>\n                    <option value={5}>5</option>\n                </NativeSelect>\n            </FormControl>\n        </div>\n    );\n}","import React from 'react';\nimport {TableCell} from \"@material-ui/core\";\n\nexport default class ReportRow extends React.Component {\n\n    buildRow = ({event, result, meet, date}) => {\n        let unit = (this.props.type === 'field') ? ' (m)' : ' (s)';\n        return [event, result + unit, meet, date];\n    };\n\n    render() {\n        let rowInfo = this.buildRow(this.props.data);\n        return (\n            rowInfo.map((data, i) => {\n                if(i === 1) {\n                    return (\n                        < TableCell key={i} style={{wordBreak: 'break-all', fontWeight: 'bold'}}>\n                            {data}\n                        </TableCell>\n                    );\n                }\n                else {\n                    return (\n                        < TableCell key={i} style={{wordBreak: 'break-all'}}>\n                            {data}\n                        </TableCell>\n                    );\n                }\n            }));\n    }\n}\n","import {Table, TableBody, TableCell, TableHead, TableRow} from \"@material-ui/core\";\nimport {styled} from '@material-ui/core/styles';\nimport React from \"react\";\nimport AthleteRow from './AthleteRow';\nimport constants from '../constants';\nimport Loader from \"react-loader-spinner\";\n\nconst PerformanceTable = styled(Table)({\n    maxWidth: '50%',\n    margin: 'auto',\n    borderRadius: '6px',\n    border: '1px inset #9395A8',\n});\n\nconst TableHeaderRow = styled(TableRow)({\n    backgroundColor: '#9395A8',\n});\n\nconst TableRowHighlighted = styled(TableRow)({\n    \"&:hover\": {\n        backgroundColor: \"#6262CB !important\"\n    }\n});\n\nconst get_event_type = event => {\n    event = event.toLowerCase();\n    if (constants.field_events.includes(event))\n        return 'field';\n    if (constants.track_events.includes(event))\n        return 'track';\n};\n\nexport default class AthleteTable extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            dataArray: null,\n            url: this.props.url\n        };\n    };\n\n    async componentDidMount() {\n        let result = await fetch(this.state.url);\n        const data = await result.json();\n        if (data)\n            this.setState({dataArray: data, isLoading: false}, () => this.props.onTableLoad());\n        else\n            this.setState({...this.state, isLoading: true});\n    };\n\n\n    render() {\n        let RenderedTable;\n        let event = this.state.url.split('event=').pop();\n        if (!this.state.isLoading)\n            RenderedTable = this.state.dataArray.map((row, i) => {\n                return <TableRowHighlighted key={i}><AthleteRow\n                    type={get_event_type(event)} key={i}\n                    data={row}/></TableRowHighlighted>;\n            });\n\n        return (\n            <div>\n                <PerformanceTable>\n                    <TableHead>\n                        <TableHeaderRow>\n                            <TableCell style={{fontWeight: 'bold'}}>EVENT</TableCell>\n                            <TableCell style={{fontWeight: 'bold'}}>RESULT</TableCell>\n                            <TableCell style={{fontWeight: 'bold'}}>MEET</TableCell>\n                            <TableCell style={{fontWeight: 'bold'}}>DATE</TableCell>\n                        </TableHeaderRow>\n                    </TableHead>\n                    <TableBody>{RenderedTable}</TableBody>\n                </PerformanceTable>\n                <Loader type=\"ThreeDots\" color=\"#6262CB\" height={80} width={80}\n                        visible={this.state.isLoading}/>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport Nav from './Nav';\nimport RankingsTable from \"./RankingsTable\";\nimport Button from \"@material-ui/core/Button\";\nimport NativeSelects from \"./NativeSelects\";\nimport constants from '../constants';\nimport AthleteTable from \"./AthleteTable\";\nimport {styled} from \"@material-ui/core\";\n\nconst ReturnButton = styled(Button)({\n    display: 'block',\n    margin: 'auto',\n    width: '50%',\n    marginTop: '1%',\n});\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: false,\n            tableLoading: true,\n            renderAthlete: false,\n            athleteName: null,\n            event: 'All',\n            gender: 'Men',\n            season: 2019,\n            top: 10,\n        };\n    }\n\n    onTableLoad = () => {\n        this.setState({tableLoading: false});\n    };\n\n    onDisplayChange = name => event => {\n        this.setState({[name]: event.target.value});\n    };\n\n    onAthleteSelect = athlete => {\n        this.setState({renderAthlete: true, athleteName: athlete});\n    };\n\n    handleReturn = () => {\n        this.setState({renderAthlete: false, athleteName: null})\n    };\n\n    handleTextField = e => {\n        if (e.keyCode === 13)\n            this.setState({renderAthlete: true, athleteName: e.target.value})\n    };\n\n    render() {\n        let display;\n        if (this.state.renderAthlete && this.state.athleteName) {\n            let athleteURL = `http://localhost:3003/athletes/${this.state.athleteName}`;\n            display = <div><h2 style={{margin: '1% auto 0 auto', maxWidth: '50%', textTransform: 'capitalize'}}>\n                {this.state.athleteName}</h2>\n                <AthleteTable key={athleteURL} onTableLoad={this.onTableLoad}\n                              url={athleteURL}/>\n            </div>\n        } else if (this.state.event === 'All') {\n            display = constants.events[this.state.gender].map(eventName => {\n                let simplifiedName = eventName.replace(this.state.gender.toLowerCase() + 's', \"\");\n                let url;\n                (simplifiedName === 'decathlon' || simplifiedName === 'heptathlon') ?\n                    url = `http://localhost:3003/results/` +\n                        `${this.state.season}?top=${this.state.top}` +\n                        `&event=${simplifiedName}` :\n                    url = `http://localhost:3003/results/` +\n                        `${this.state.season}?top=${this.state.top}` +\n                        `&event=${this.state.gender.toLowerCase().replace(/\\s/g, '')}s` +\n                        `${simplifiedName}`;\n                return (\n                    <div><h2 style={{margin: '1% auto 0 auto', maxWidth: '50%'}}>\n                        {simplifiedName.replace(this.state.gender, \"\").toUpperCase()} ({this.state.gender.toUpperCase()})</h2>\n                        < RankingsTable\n                            key={url}\n                            onTableLoad={this.onTableLoad}\n                            onAthleteSelect={this.onAthleteSelect}\n                            url={url}\n                        />\n                    </div>\n                )\n            })\n        } else {\n            let url;\n            (this.state.event === 'Decathlon' || this.state.event === 'Heptathlon') ? url = `http://localhost:3003/results/` +\n                `${this.state.season}?top=${this.state.top}` +\n                `&event=${this.state.event}` :\n                url = `http://localhost:3003/results/` +\n                    `${this.state.season}?top=${this.state.top}` +\n                    `&event=${this.state.gender.toLowerCase().replace(/\\s/g, '')}s` +\n                    `${this.state.event.toLowerCase().replace(/\\s/g, '')}`;\n            display = <div><h2 style={{margin: '1% auto 0 auto', maxWidth: '50%'}}>\n                {this.state.event.toUpperCase()} ({this.state.gender.toUpperCase()})</h2>\n                < RankingsTable\n                    key={url}\n                    onTableLoad={this.onTableLoad}\n                    onAthleteSelect={this.onAthleteSelect}\n                    url={url}\n                />\n            </div>\n        }\n\n        return (\n            <div style={{marginBottom: '1%'}}>\n                <Nav key={this.state.athleteName} handleTextField={this.handleTextField}/>\n                {!this.state.renderAthlete ?\n                    <NativeSelects top={this.state.top} gender={this.state.gender} event={this.state.event}\n                                   season={this.state.season}\n                                   onDisplayChange={this.onDisplayChange}/> :\n                    <ReturnButton variant='outlined' color='secondary' onClick={this.handleReturn}>Return To\n                        Rankings</ReturnButton>}\n                {display}\n\n            </div>\n\n        );\n\n    }\n\n}\n\nexport default Home;","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Home from './components/Home';\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        secondary: {\n            main: '#6262CB'\n        },\n    },\n});\n\nfunction App() {\n    return (\n        <MuiThemeProvider theme={theme}>\n            <CssBaseline />\n            <Home/>\n        </MuiThemeProvider>\n   )\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'typeface-roboto-mono';\nimport './css/index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}